name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        WOOCOMMERCE_CONSUMER_KEY: ${{ secrets.WOOCOMMERCE_CONSUMER_KEY }}
        WOOCOMMERCE_CONSUMER_SECRET: ${{ secrets.WOOCOMMERCE_CONSUMER_SECRET }}
        WOOCOMMERCE_SITE_URL: ${{ secrets.WOOCOMMERCE_SITE_URL }}
        KATANA_API_KEY: ${{ secrets.KATANA_API_KEY }}

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create production config
      run: |
        cat > src/config.js << EOL
        const config = {
            woocommerce: {
                apiBaseUrl: "https://quikrstuff.com/wp-json/wc/v3",
                consumerKey: "${{ secrets.WOOCOMMERCE_CONSUMER_KEY }}",
                consumerSecret: "${{ secrets.WOOCOMMERCE_CONSUMER_SECRET }}",
                siteUrl: "${{ secrets.WOOCOMMERCE_SITE_URL }}"
            },
            katana: {
                apiBaseUrl: "https://api.katanamrp.com/v1",
                apiKey: "${{ secrets.KATANA_API_KEY }}"
            }
        };
        window.config = config;
        EOL
    
    - name: Create production build
      run: |
        mkdir -p dist
        cp index.html dist/
        cp index-web.html dist/
        cp -r src dist/
        mkdir -p dist/integrations/missive-js
        cp integrations/missive-js/app.js dist/integrations/missive-js/
        BUILD_VERSION=$(date +%Y%m%d%H%M%S)  # cache-busting only
        DISPLAY_VERSION=${GITHUB_SHA::7}     # human-readable version
        # Update cache-busting version in HTML references (keep timestamps here)
        sed -E -i "s/\?v=[0-9]+/\?v=${BUILD_VERSION}/g" dist/index.html
        sed -E -i "s/\?v=[0-9]+/\?v=${BUILD_VERSION}/g" dist/index-web.html
        # Update displayed version in app header to short SHA with GH prefix (legacy)
        sed -E -i "s/return 'v[0-9]+';/return 'GH-${DISPLAY_VERSION}';/g" dist/src/app.js || true
        # Write manifest with short SHA for all clients
        echo "{\"version\": \"${DISPLAY_VERSION}\", \"commit\": \"$GITHUB_SHA\"}" > dist/version.json

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4